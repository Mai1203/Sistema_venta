/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Visual;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Image;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import model.ClienteDAO;
import model.Config;
import model.Detalle;
import model.Eventos;
import model.Movimientos;
import model.MovimientosDAO;
import model.NuevaVentaDAO;
import model.Productos;
import model.ProductosDAO;
import model.Venta;
import model.VentaDAO;

/**
 *
 * @author maico
 */
public class JP_NuevaVenta extends javax.swing.JPanel {

    int item;
    double totalPagar = 0.00;
    Eventos event = new Eventos();
    Detalle de = new Detalle();
    Venta v = new Venta();
    VentaDAO vDao = new VentaDAO();
    Cliente cl = new Cliente();
    ClienteDAO cliente = new ClienteDAO();
    Productos pro = new Productos();
    NuevaVentaDAO nv = new NuevaVentaDAO();
    DefaultTableModel modelo = new DefaultTableModel();

    /**
     * Creates new form NuevaVenta
     */
    public JP_NuevaVenta() {
        initComponents();
    }

    public JP_NuevaVenta(String vendedor) {
        initComponents();
        Jlb_vendedor.setText(vendedor);
        Jcb_formaPago.addActionListener(e -> {
            String selectOption = (String) Jcb_formaPago.getSelectedItem();
            if (selectOption.equals("EFECTIVO")) {
                Jtf_abono.setText(Jlb_total.getText());
                Jlb_saldo.setText("$0.0");
                Jtf_abono.setEnabled(false);
            } else {
                Jtf_abono.setEnabled(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JP_BG = new javax.swing.JPanel();
        Jlb_codigo = new javax.swing.JLabel();
        Jlb_producto = new javax.swing.JLabel();
        Jlb_cantidad = new javax.swing.JLabel();
        Jlb_precio = new javax.swing.JLabel();
        Jlb_stockdisponible = new javax.swing.JLabel();
        Jtf_codigo = new javax.swing.JTextField();
        Jtf_producto = new javax.swing.JTextField();
        Jtf_cantidad = new javax.swing.JTextField();
        Jtf_precio = new javax.swing.JTextField();
        Jtf_stockdisponible = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Jtable_nuevaVenta = new javax.swing.JTable();
        Jlb_dni_ruc = new javax.swing.JLabel();
        Jlb_nombre = new javax.swing.JLabel();
        Jbn_pagar = new javax.swing.JButton();
        Jtf_dni_ruc = new javax.swing.JTextField();
        Jtf_nombre = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        Jbn_eliminar = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        Jlb_txtTotalaPagar = new javax.swing.JLabel();
        Jlb_total = new javax.swing.JLabel();
        Jlb_direccion = new javax.swing.JLabel();
        Jtf_direccion = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        Jlb_telefono = new javax.swing.JLabel();
        Jtf_telefono = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        Jlb_vendedor = new javax.swing.JLabel();
        Jcb_formaPago = new javax.swing.JComboBox<>();
        Jlb_txtAbono = new javax.swing.JLabel();
        Jlb_txtSaldo = new javax.swing.JLabel();
        Jlb_saldo = new javax.swing.JLabel();
        Jtf_abono = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        JP_BG.setBackground(new java.awt.Color(255, 255, 255));
        JP_BG.setPreferredSize(new java.awt.Dimension(1050, 660));

        Jlb_codigo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_codigo.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_codigo.setText("Codigo:");

        Jlb_producto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_producto.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_producto.setText(" Producto:");

        Jlb_cantidad.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_cantidad.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_cantidad.setText("Cantidad:");

        Jlb_precio.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_precio.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_precio.setText("Precio:");

        Jlb_stockdisponible.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_stockdisponible.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_stockdisponible.setText("Stock:");

        Jtf_codigo.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_codigo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_codigo.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_codigo.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Jtf_codigo.setBorder(null);
        Jtf_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Jtf_codigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_codigoKeyTyped(evt);
            }
        });

        Jtf_producto.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_producto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_producto.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_producto.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Jtf_producto.setBorder(null);
        Jtf_producto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Jtf_productoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_productoKeyTyped(evt);
            }
        });

        Jtf_cantidad.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_cantidad.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_cantidad.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_cantidad.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Jtf_cantidad.setBorder(null);
        Jtf_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Jtf_cantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_cantidadKeyTyped(evt);
            }
        });

        Jtf_precio.setEditable(false);
        Jtf_precio.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_precio.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_precio.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_precio.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Jtf_precio.setBorder(null);

        Jtf_stockdisponible.setEditable(false);
        Jtf_stockdisponible.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_stockdisponible.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_stockdisponible.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_stockdisponible.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Jtf_stockdisponible.setBorder(null);

        Jtable_nuevaVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "PRODUCTO", "CANTIDAD", "PRECIO", "TOTAL$"
            }
        ));
        jScrollPane1.setViewportView(Jtable_nuevaVenta);
        if (Jtable_nuevaVenta.getColumnModel().getColumnCount() > 0) {
            Jtable_nuevaVenta.getColumnModel().getColumn(0).setPreferredWidth(30);
            Jtable_nuevaVenta.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        Jlb_dni_ruc.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_dni_ruc.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_dni_ruc.setText("DNI/RUC");

        Jlb_nombre.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_nombre.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_nombre.setText("Nombre:");

        Jbn_pagar.setBackground(new java.awt.Color(255, 102, 0));
        Jbn_pagar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jbn_pagar.setForeground(new java.awt.Color(0, 0, 0));
        Jbn_pagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/N_Venta2.png"))); // NOI18N
        Jbn_pagar.setText("Pagar");
        Jbn_pagar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Jbn_pagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbn_pagarActionPerformed(evt);
            }
        });

        Jtf_dni_ruc.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_dni_ruc.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_dni_ruc.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_dni_ruc.setBorder(null);
        Jtf_dni_ruc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Jtf_dni_rucKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_dni_rucKeyTyped(evt);
            }
        });

        Jtf_nombre.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_nombre.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_nombre.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_nombre.setBorder(null);
        Jtf_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_nombreKeyTyped(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(255, 102, 0));

        jSeparator2.setForeground(new java.awt.Color(255, 102, 0));

        jSeparator3.setForeground(new java.awt.Color(255, 102, 0));

        jSeparator4.setForeground(new java.awt.Color(255, 102, 0));

        jSeparator5.setForeground(new java.awt.Color(255, 102, 0));

        Jbn_eliminar.setBackground(new java.awt.Color(255, 102, 0));
        Jbn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon_eliminar.png"))); // NOI18N
        Jbn_eliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Jbn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Jbn_eliminarActionPerformed(evt);
            }
        });

        jSeparator6.setForeground(new java.awt.Color(255, 102, 0));

        jSeparator7.setForeground(new java.awt.Color(255, 102, 0));

        Jlb_txtTotalaPagar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_txtTotalaPagar.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_txtTotalaPagar.setText("Total a pagar:");

        Jlb_total.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_total.setForeground(new java.awt.Color(0, 0, 0));

        Jlb_direccion.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_direccion.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_direccion.setText("Dirección:");

        Jtf_direccion.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_direccion.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_direccion.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_direccion.setBorder(null);
        Jtf_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_direccionKeyTyped(evt);
            }
        });

        jSeparator8.setForeground(new java.awt.Color(255, 102, 0));

        Jlb_telefono.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_telefono.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_telefono.setText("Telefono:");

        Jtf_telefono.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_telefono.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jtf_telefono.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_telefono.setBorder(null);
        Jtf_telefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_telefonoKeyTyped(evt);
            }
        });

        jSeparator9.setForeground(new java.awt.Color(255, 102, 0));

        Jlb_vendedor.setText("Maicol");

        Jcb_formaPago.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        Jcb_formaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE", "EFECTIVO", "CREDITO" }));

        Jlb_txtAbono.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_txtAbono.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_txtAbono.setText("Abono:");

        Jlb_txtSaldo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_txtSaldo.setForeground(new java.awt.Color(255, 102, 0));
        Jlb_txtSaldo.setText("Saldo:");

        Jlb_saldo.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jlb_saldo.setForeground(new java.awt.Color(0, 0, 0));

        Jtf_abono.setBackground(new java.awt.Color(255, 255, 255));
        Jtf_abono.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        Jtf_abono.setForeground(new java.awt.Color(0, 0, 0));
        Jtf_abono.setText("0");
        Jtf_abono.setBorder(null);
        Jtf_abono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Jtf_abonoMouseClicked(evt);
            }
        });
        Jtf_abono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Jtf_abonoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Jtf_abonoKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("Forma de pago:");

        javax.swing.GroupLayout JP_BGLayout = new javax.swing.GroupLayout(JP_BG);
        JP_BG.setLayout(JP_BGLayout);
        JP_BGLayout.setHorizontalGroup(
            JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JP_BGLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Jlb_codigo)
                                    .addComponent(Jtf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Jlb_producto)
                                    .addComponent(Jtf_producto, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Jlb_cantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Jtf_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(75, 75, 75)
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator4)
                            .addComponent(Jlb_precio)
                            .addComponent(Jtf_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Jlb_stockdisponible)
                            .addComponent(Jtf_stockdisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(82, 82, 82)
                        .addComponent(Jbn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Jlb_dni_ruc)
                                    .addComponent(Jtf_dni_ruc, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Jlb_direccion)
                                    .addComponent(jSeparator8)
                                    .addComponent(Jtf_direccion, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Jlb_nombre)
                                    .addComponent(Jtf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Jlb_telefono)
                                        .addComponent(Jtf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Jlb_vendedor, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JP_BGLayout.createSequentialGroup()
                                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(JP_BGLayout.createSequentialGroup()
                                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Jlb_txtSaldo)
                                                    .addComponent(Jlb_txtAbono))
                                                .addGap(78, 78, 78))
                                            .addGroup(JP_BGLayout.createSequentialGroup()
                                                .addComponent(Jlb_txtTotalaPagar)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JP_BGLayout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Jcb_formaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Jtf_abono, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                            .addComponent(Jlb_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Jlb_saldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(Jbn_pagar)
                                        .addGap(1, 1, 1))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addGap(29, 29, 29))
        );
        JP_BGLayout.setVerticalGroup(
            JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JP_BGLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addComponent(Jlb_precio)
                        .addGap(9, 9, 9)
                        .addComponent(Jtf_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addComponent(Jlb_stockdisponible)
                        .addGap(9, 9, 9)
                        .addComponent(Jtf_stockdisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Jbn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addComponent(Jlb_cantidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Jtf_cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addComponent(Jlb_codigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Jtf_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addComponent(Jlb_producto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Jtf_producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addComponent(Jlb_dni_ruc)
                                .addGap(9, 9, 9)
                                .addComponent(Jtf_dni_ruc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(Jlb_direccion)
                                .addGap(9, 9, 9)
                                .addComponent(Jtf_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(JP_BGLayout.createSequentialGroup()
                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(JP_BGLayout.createSequentialGroup()
                                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(JP_BGLayout.createSequentialGroup()
                                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(Jlb_txtTotalaPagar)
                                                    .addComponent(Jlb_total))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Jlb_txtAbono)
                                                    .addComponent(Jtf_abono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(Jbn_pagar))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Jlb_txtSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(Jlb_saldo)))
                                    .addGroup(JP_BGLayout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Jlb_telefono)
                                        .addGap(9, 9, 9)
                                        .addComponent(Jtf_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Jlb_vendedor)
                        .addGap(15, 15, 15))
                    .addGroup(JP_BGLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(JP_BGLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Jlb_nombre)
                            .addComponent(Jcb_formaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(7, 7, 7)
                        .addComponent(Jtf_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JP_BG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JP_BG, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Jtf_productoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_productoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!Jtf_producto.getText().isEmpty()) {
                String producto = Jtf_producto.getText();
                pro = nv.BuscarPro(producto);

                if (pro.getCodigo() != null) {
                    Jtf_codigo.setText(pro.getCodigo());
                    Jtf_precio.setText("" + pro.getPrecio());
                    Jtf_stockdisponible.setText("" + pro.getStock());
                    Jtf_cantidad.requestFocus();
                } else {
                    LimpiarJtf();
                    Jtf_producto.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresar Producto!", "Message: product", JOptionPane.INFORMATION_MESSAGE);
                Jtf_producto.requestFocus();
            }
        }
    }//GEN-LAST:event_Jtf_productoKeyPressed

    private void Jtf_cantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_cantidadKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!Jtf_cantidad.getText().isEmpty()) {
                String cod = Jtf_codigo.getText();
                String producto = Jtf_producto.getText();

                int cant = Integer.parseInt(Jtf_cantidad.getText());
                double precio = Double.parseDouble(Jtf_precio.getText());
                double total = cant * precio;
                int stock = Integer.parseInt(Jtf_stockdisponible.getText());

                if (stock >= cant) {
                    item = item + 1;
                    modelo = (DefaultTableModel) Jtable_nuevaVenta.getModel();
                    for (int i = 0; i < Jtable_nuevaVenta.getRowCount(); i++) {
                        if (Jtable_nuevaVenta.getValueAt(i, 1).equals(Jtf_producto.getText())) {
                            JOptionPane.showMessageDialog(null, "El producto ya está registrado.", "Message", JOptionPane.INFORMATION_MESSAGE);
                            LimpiarJtf();
                            return;
                        }
                    }
                    ArrayList lista = new ArrayList();
                    lista.add(item);
                    lista.add(cod);
                    lista.add(producto);
                    lista.add(cant);
                    lista.add(precio);
                    lista.add(total);

                    Object[] ob = new Object[5];
                    ob[0] = lista.get(1);
                    ob[1] = lista.get(2);
                    ob[2] = lista.get(3);
                    ob[3] = lista.get(4);
                    ob[4] = lista.get(5);

                    modelo.addRow(ob);
                    Jtable_nuevaVenta.setModel(modelo);

                    TotalPagar();
                    LimpiarJtf();
                } else {
                    JOptionPane.showMessageDialog(null, "Cantidad no disponible", "Message: Stock", JOptionPane.INFORMATION_MESSAGE);
                    Jtf_cantidad.setText("");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese cantidad", "Message: Stock", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_Jtf_cantidadKeyPressed

    private void Jtf_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_codigoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!Jtf_codigo.getText().isEmpty()) {
                String codigo = Jtf_codigo.getText();
                pro = nv.BuscarCod(codigo);

                if (pro.getProducto() != null) {
                    Jtf_producto.setText(pro.getProducto());
                    Jtf_precio.setText("" + pro.getPrecio());
                    Jtf_stockdisponible.setText("" + pro.getStock());
                    Jtf_cantidad.requestFocus();
                } else {
                    Jtf_producto.setText("");
                    Jtf_precio.setText("");
                    Jtf_stockdisponible.setText("");
                    Jtf_codigo.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese el codigo del producto!", "Message: Code", JOptionPane.INFORMATION_MESSAGE);
                Jtf_codigo.requestFocus();
            }
        }
    }//GEN-LAST:event_Jtf_codigoKeyPressed

    private void Jbn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbn_eliminarActionPerformed
        if (Jtable_nuevaVenta.getSelectedRow() != -1) {
            modelo = (DefaultTableModel) Jtable_nuevaVenta.getModel();
            modelo.removeRow(Jtable_nuevaVenta.getSelectedRow());
            TotalPagar();
            Jtf_codigo.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione el producto", "Message: product", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_Jbn_eliminarActionPerformed

    private void Jtf_dni_rucKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_dni_rucKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (!Jtf_dni_ruc.getText().isEmpty()) {
                int dni = Integer.parseInt(Jtf_dni_ruc.getText());
                cl = cliente.BuscarCliente(dni);
                if (cl.getNombre() != null) {
                    Jtf_nombre.setText(cl.getNombre());
                    Jtf_direccion.setText(cl.getDireccion());
                    Jtf_telefono.setText(cl.getTelefono());
                } else {
                    Jtf_dni_ruc.setText("");
                    Jtf_nombre.setText("");
                    Jtf_direccion.setText("");
                    Jtf_telefono.setText("");
                    JOptionPane.showMessageDialog(null, "El cliente no existe!", "Message: Non-existent customer", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_Jtf_dni_rucKeyPressed

    private void Jbn_pagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Jbn_pagarActionPerformed
        try {
            if (Jtable_nuevaVenta.getRowCount() > 0) {
                if (!Jtf_dni_ruc.getText().isEmpty() && !Jtf_nombre.getText().isEmpty()) {
                    if (!Jcb_formaPago.getSelectedItem().toString().equals("SELECCIONE")) {
                        int dni = Integer.parseInt(Jtf_dni_ruc.getText());
                        cl = cliente.BuscarCliente(dni);
                        if (cl.getNombre() == null) {
                            RegistrarCliente();
                        }
                        RegistrarVenta();
                        RegistrarDetalle();
                        RegistrarCaja();
                        RegistrarMovimiento();
                        LimpiarJtf();

                        actualizarStock();
                        try {
                            pdf();
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(JP_NuevaVenta.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        LimpiarTable();
                        limpiarTotal();
                        limpiarClientesJtf();
                    } else {
                        JOptionPane.showMessageDialog(null, "Ingrese el metodo de pago", "Message: Pago", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Ingrese el nombre del cliente!", "Message: Customer", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No hay ningún producto en la venta", "Message: Product", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }//GEN-LAST:event_Jbn_pagarActionPerformed

    private void RegistrarCaja() {
        double caja = vDao.ObtenerCaja();
        caja += Double.parseDouble(Jtf_abono.getText().replace('$', '0').replace(',', '.'));
        vDao.ModificarCaja(caja);
    }

    private void limpiarTotal() {
        Jlb_total.setText("");
        Jtf_abono.setText("");
        Jlb_saldo.setText("");
    }

    private void Jtf_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_codigoKeyTyped
        event.numberKeyPress(evt);
    }//GEN-LAST:event_Jtf_codigoKeyTyped

    private void Jtf_productoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_productoKeyTyped
        event.textKeyPress(evt);
    }//GEN-LAST:event_Jtf_productoKeyTyped

    private void Jtf_cantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_cantidadKeyTyped
        event.numberKeyPress(evt);
    }//GEN-LAST:event_Jtf_cantidadKeyTyped

    private void Jtf_dni_rucKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_dni_rucKeyTyped
        event.numberKeyPress(evt);
    }//GEN-LAST:event_Jtf_dni_rucKeyTyped

    private void Jtf_nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_nombreKeyTyped
        event.textKeyPress(evt);
    }//GEN-LAST:event_Jtf_nombreKeyTyped

    private void Jtf_direccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_direccionKeyTyped
        event.textKeyPress(evt);
    }//GEN-LAST:event_Jtf_direccionKeyTyped

    private void Jtf_telefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_telefonoKeyTyped
        event.numberKeyPress(evt);
        event.txtCelularKeyTyped(evt, Jtf_telefono);
    }//GEN-LAST:event_Jtf_telefonoKeyTyped

    private void Jtf_abonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Jtf_abonoMouseClicked
        Jtf_abono.setText("");
    }//GEN-LAST:event_Jtf_abonoMouseClicked

    private void Jtf_abonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_abonoKeyTyped
        event.numberDecimalKeyPress(evt, Jtf_abono);
    }//GEN-LAST:event_Jtf_abonoKeyTyped

    private void Jtf_abonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Jtf_abonoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            double total = Double.parseDouble(Jlb_total.getText().replace('$', '0').replace(',', '.'));
            double abono = Double.parseDouble(Jtf_abono.getText().replace(',', '.'));
            if (abono < total) {
                double saldo = total - abono;
                Jlb_saldo.setText("$" + String.format("%.2f", saldo));
            } else {
                JOptionPane.showMessageDialog(null, "El abono debe ser menor al total", "Message: Total", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_Jtf_abonoKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JP_BG;
    private javax.swing.JButton Jbn_eliminar;
    private javax.swing.JButton Jbn_pagar;
    private javax.swing.JComboBox<String> Jcb_formaPago;
    private javax.swing.JLabel Jlb_cantidad;
    private javax.swing.JLabel Jlb_codigo;
    private javax.swing.JLabel Jlb_direccion;
    private javax.swing.JLabel Jlb_dni_ruc;
    private javax.swing.JLabel Jlb_nombre;
    private javax.swing.JLabel Jlb_precio;
    private javax.swing.JLabel Jlb_producto;
    private javax.swing.JLabel Jlb_saldo;
    private javax.swing.JLabel Jlb_stockdisponible;
    private javax.swing.JLabel Jlb_telefono;
    private javax.swing.JLabel Jlb_total;
    private javax.swing.JLabel Jlb_txtAbono;
    private javax.swing.JLabel Jlb_txtSaldo;
    private javax.swing.JLabel Jlb_txtTotalaPagar;
    private javax.swing.JLabel Jlb_vendedor;
    private javax.swing.JTable Jtable_nuevaVenta;
    private javax.swing.JTextField Jtf_abono;
    private javax.swing.JTextField Jtf_cantidad;
    public javax.swing.JTextField Jtf_codigo;
    private javax.swing.JTextField Jtf_direccion;
    private javax.swing.JTextField Jtf_dni_ruc;
    private javax.swing.JTextField Jtf_nombre;
    private javax.swing.JTextField Jtf_precio;
    public javax.swing.JTextField Jtf_producto;
    private javax.swing.JTextField Jtf_stockdisponible;
    private javax.swing.JTextField Jtf_telefono;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    // End of variables declaration//GEN-END:variables
    private void TotalPagar() {
        totalPagar = 0.00;
        int numFila = Jtable_nuevaVenta.getRowCount();
        for (int i = 0; i < numFila; i++) {
            double cal = Double.parseDouble(String.valueOf(Jtable_nuevaVenta.getModel().getValueAt(i, 4)));
            totalPagar = totalPagar + cal;
        }
        Jlb_total.setText("$" + String.format("%.2f", totalPagar));
    }

    private void LimpiarJtf() {
        Jtf_codigo.setText("");
        Jtf_producto.setText("");
        Jtf_precio.setText("");
        Jtf_cantidad.setText("");
        Jtf_stockdisponible.setText("");
    }

    private void RegistrarVenta() {
        String cliente = Jtf_nombre.getText();
        String vendedor = Jlb_vendedor.getText();
        String tipo_venta = Jcb_formaPago.getSelectedItem().toString();
        double total = totalPagar;
        double abono = Double.parseDouble(Jtf_abono.getText().replace('$', '0').replace(',', '.'));
        double saldo = Double.parseDouble(Jlb_saldo.getText().replace('$', '0').replace(',', '.'));
        v.setCliente(cliente);
        v.setVendedor(vendedor);
        v.setTipo_pago(tipo_venta);
        v.setTotal(total);
        v.setAbono(abono);
        v.setSaldo(saldo);

        vDao.RegistrarVenta(v);
    }

    private void RegistrarDetalle() {
        int id = vDao.idVenta();
        for (int i = 0; i < Jtable_nuevaVenta.getRowCount(); i++) {
            String cod = Jtable_nuevaVenta.getValueAt(i, 0).toString();
            String descrip = Jtable_nuevaVenta.getValueAt(i, 1).toString();
            int can = Integer.parseInt(Jtable_nuevaVenta.getValueAt(i, 2).toString());
            double precio = Double.parseDouble(Jtable_nuevaVenta.getValueAt(i, 3).toString());
            de.setDescrip(descrip);
            de.setCod_produc(cod);
            de.setCantidad(can);
            de.setPrecio(precio);
            de.setId_venta(id);
            vDao.RegistrarDetalle(de);
        }
    }

    private void RegistrarMovimiento() {
        String tipo_mov = "Venta";
        double monto = Double.parseDouble(Jtf_abono.getText().replace('$', '0').replace(',', '.'));
        int id_factura = vDao.idVenta();
        Movimientos m = new Movimientos();
        m.setTipo_mov(tipo_mov);
        m.setMonto(monto);
        m.setId_factura(id_factura);
        MovimientosDAO mDao = new MovimientosDAO();
        mDao.RegistrarMovimiento(m);
    }

    private void RegistrarCliente() {
        if (!Jtf_dni_ruc.getText().isEmpty() || !Jtf_nombre.getText().isEmpty() || !Jtf_direccion.getText().isEmpty() || !Jtf_telefono.getText().isEmpty()) {

            if (Jtf_dni_ruc.getText().isEmpty()) {
                cl.setDni(0);
            } else {
                cl.setDni(Integer.parseInt(Jtf_dni_ruc.getText()));
            }
            cl.setNombre(Jtf_nombre.getText());
            cl.setTelefono(Jtf_telefono.getText());
            cl.setDireccion(Jtf_direccion.getText());

            cliente.RegistrarCliente(cl);
            LimpiarJtf();
            JOptionPane.showMessageDialog(null, "Cliente Registrado", "Message: registro exitoso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "No deje campos vacios!", "Error: No data", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void actualizarStock() {
        for (int i = 0; i < Jtable_nuevaVenta.getRowCount(); i++) {
            String cod = Jtable_nuevaVenta.getValueAt(i, 0).toString();
            int cant = Integer.parseInt(Jtable_nuevaVenta.getValueAt(i, 2).toString());
            pro = nv.BuscarCod(cod);
            int StockActual = pro.getStock() - cant;
            vDao.actualizarStock(StockActual, cod);
        }
    }

    private void LimpiarTable() {
        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    private void limpiarClientesJtf() {
        Jtf_dni_ruc.setText("");
        Jtf_nombre.setText("");
        Jtf_direccion.setText("");
        Jtf_telefono.setText("");
        Jlb_total.setText("");
    }

    private void pdf() throws FileNotFoundException {
        Document documento = new Document();
        try {
            int id = vDao.idVenta();
            String ruta = System.getProperty("user.home");

            //crear directorio fecturas
            File directorio = new File(ruta + "/Documents/facturas");
            if (!directorio.exists()) {
                if (directorio.mkdirs()) {
                    JOptionPane.showMessageDialog(null, "Directorio creado en documentos", "Message: DIR", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Error al crear el directorio", "ERROR: DIR", JOptionPane.ERROR_MESSAGE);
                }
            }

            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Documents/facturas/venta_" + id + ".pdf"));
            documento.open();

            Image img = Image.getInstance("src/Image/icono.png");
            Paragraph fech = new Paragraph();
            Font negrita = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLUE);
            fech.add(Chunk.NEWLINE);
            Date date = new Date();
            fech.add("Factura: " + id + "\n" + "Fecha: " + new SimpleDateFormat("dd-MM-yyyy").format(date) + "\n\n");

            PdfPTable Encabezado = new PdfPTable(4);
            Encabezado.setWidthPercentage(100);
            Encabezado.getDefaultCell().setBorder(0);
            float[] ColumnaEncabezado = new float[]{20f, 30f, 70f, 40f};
            Encabezado.setWidths(ColumnaEncabezado);
            Encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);

            Encabezado.addCell(img);
            Config conf = new Config();
            ProductosDAO proDao = new ProductosDAO();
            conf = proDao.BuscarDatos();

            String ruc = "" + conf.getCc();
            String nom = "" + conf.getNombre();
            String tel = "" + conf.getTelefono();
            String dir = "" + conf.getDireccion();

            PdfPCell cell1 = new PdfPCell(new Phrase(""));
            cell1.setBorder(0);
            Encabezado.addCell(cell1);

            PdfPCell cell2 = new PdfPCell(new Phrase("Ruc: " + ruc + "\nNombre: " + nom + "\nTelefono: " + tel + "\nDireccion: " + dir));
            cell2.setBorder(0);
            Encabezado.addCell(cell2);

            PdfPCell cell3 = new PdfPCell(fech);
            cell3.setBorder(0);
            Encabezado.addCell(cell3);

            PdfPCell cell4 = new PdfPCell(new Phrase(""));
            cell4.setBorder(0);
            Encabezado.addCell(cell4);

            documento.add(Encabezado);

            Paragraph cli = new Paragraph();
            cli.add(Chunk.NEWLINE);
            cli.add("Datos de los clientes" + "\n\n");
            cli.setAlignment(Element.ALIGN_CENTER);
            documento.add(cli);

            PdfPTable tablaCli = new PdfPTable(4);
            Encabezado.setWidthPercentage(100);
            Encabezado.getDefaultCell().setBorder(0);
            float[] ColumnaCli = new float[]{20f, 50f, 30f, 40f};
            Encabezado.setWidths(ColumnaCli);
            Encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);
            PdfPCell cli1 = new PdfPCell(new Phrase("C.c.", negrita));
            PdfPCell cli2 = new PdfPCell(new Phrase("Nombre", negrita));
            PdfPCell cli3 = new PdfPCell(new Phrase("Telefono", negrita));
            PdfPCell cli4 = new PdfPCell(new Phrase("Dirección", negrita));
            cli1.setBorder(0);
            cli2.setBorder(0);
            cli3.setBorder(0);
            cli4.setBorder(0);
            tablaCli.addCell(cli1);
            tablaCli.addCell(cli2);
            tablaCli.addCell(cli3);
            tablaCli.addCell(cli4);
            tablaCli.addCell(Jtf_dni_ruc.getText());
            tablaCli.addCell(Jtf_nombre.getText());
            tablaCli.addCell(Jtf_telefono.getText());
            tablaCli.addCell(Jtf_direccion.getText());
            documento.add(tablaCli);

            //productos
            PdfPTable tablaPro = new PdfPTable(4);
            Encabezado.setWidthPercentage(100);
            Encabezado.getDefaultCell().setBorder(0);
            float[] ColumnaPro = new float[]{10f, 50f, 15f, 20f};
            Encabezado.setWidths(ColumnaPro);
            Encabezado.setHorizontalAlignment(Element.ALIGN_LEFT);
            PdfPCell pro1 = new PdfPCell(new Phrase("Cant.", negrita));
            PdfPCell pro2 = new PdfPCell(new Phrase("Descripción", negrita));
            PdfPCell pro3 = new PdfPCell(new Phrase("Precio U.", negrita));
            PdfPCell pro4 = new PdfPCell(new Phrase("Precio T.", negrita));
            pro1.setBorder(0);
            pro2.setBorder(0);
            pro3.setBorder(0);
            pro4.setBorder(0);
            pro1.setBackgroundColor(BaseColor.DARK_GRAY);
            pro2.setBackgroundColor(BaseColor.DARK_GRAY);
            pro3.setBackgroundColor(BaseColor.DARK_GRAY);
            pro4.setBackgroundColor(BaseColor.DARK_GRAY);
            tablaPro.addCell(pro1);
            tablaPro.addCell(pro2);
            tablaPro.addCell(pro3);
            tablaPro.addCell(pro4);

            for (int i = 0; i < Jtable_nuevaVenta.getRowCount(); i++) {
                String producto = Jtable_nuevaVenta.getValueAt(i, 1).toString();
                String cantidad = Jtable_nuevaVenta.getValueAt(i, 2).toString();
                String precio = Jtable_nuevaVenta.getValueAt(i, 3).toString();
                String total = Jtable_nuevaVenta.getValueAt(i, 4).toString();
                tablaPro.addCell(cantidad);
                tablaPro.addCell(producto);
                tablaPro.addCell(precio);
                tablaPro.addCell(total);
            }
            documento.add(tablaPro);
            
            Paragraph tittle = new Paragraph();
            tittle.add(Chunk.NEWLINE);
            tittle.add("------------------ Formas de pago ------------------");
            tittle.setAlignment(Element.ALIGN_CENTER);
            documento.add(tittle);
            
            Paragraph info = new Paragraph();
            info.add(Chunk.NEWLINE);
            info.add("Total a Pagar: $" + totalPagar);
            info.add("\nForma de pago: " + Jcb_formaPago.getSelectedItem().toString());
            info.add("\nAbono: " + Jtf_abono.getText());
            info.add("\nSaldo: " + Jlb_saldo.getText());
            info.setAlignment(Element.ALIGN_LEFT);
            documento.add(info);

            Paragraph firma = new Paragraph();
            firma.add(Chunk.NEWLINE);
            firma.add("Cancelación Y Firma\n\n");
            firma.add("----------------------------------------------------");
            firma.setAlignment(Element.ALIGN_CENTER);
            documento.add(firma);

            Paragraph mensaje = new Paragraph();
            mensaje.add(Chunk.NEWLINE);
            mensaje.add("Gracias por su Compra, vuelva pronto.");
            mensaje.setAlignment(Element.ALIGN_CENTER);
            documento.add(mensaje);

            documento.close();
            Desktop.getDesktop().open(new File(ruta + "/Documents/facturas/venta_" + id + ".pdf"));

        } catch (DocumentException | IOException e) {
            JOptionPane.showMessageDialog(null, e.toString(), "Error pdf", JOptionPane.ERROR_MESSAGE);
        }
    }
}
